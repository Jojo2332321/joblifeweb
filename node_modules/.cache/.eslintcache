[{"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\index.js":"1","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\App.js":"2","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\mobX\\userM.js":"3","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\mobX\\shiftsM.js":"4","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\mobX\\firmaM.js":"5","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\NavBar.js":"6","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\AppRouter.js":"7","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\http\\userAPI.js":"8","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\routes.js":"9","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\http\\index.js":"10","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Settings.js":"11","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Admin.js":"12","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\utils\\consts.js":"13","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Shifts.js":"14","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Workers.js":"15","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Auth.js":"16","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\CompanysBar.js":"17","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\ShiftsFiltr.js":"18","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\http\\ShiftsAPI.js":"19","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\ShiftList.js":"20","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\WorkersListInShifts.js":"21","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\WorkersList.js":"22","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\Calendar.js":"23","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreatePositio.js":"24","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateCompanys.js":"25","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\WorkPermitModal.js":"26","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateShifts.js":"27","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateComapanyTyp.js":"28","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateWorkHourTemplates.js":"29","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateWorkers.js":"30","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\WorkerCard.js":"31","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateWorkStatusModal.js":"32"},{"size":638,"mtime":1683752025432,"results":"33","hashOfConfig":"34"},{"size":887,"mtime":1683833121365,"results":"35","hashOfConfig":"34"},{"size":475,"mtime":1683119372042,"results":"36","hashOfConfig":"34"},{"size":2361,"mtime":1683309344837,"results":"37","hashOfConfig":"34"},{"size":461,"mtime":1683120347951,"results":"38","hashOfConfig":"34"},{"size":1765,"mtime":1683115622094,"results":"39","hashOfConfig":"34"},{"size":1408,"mtime":1683294382194,"results":"40","hashOfConfig":"34"},{"size":718,"mtime":1682271146234,"results":"41","hashOfConfig":"34"},{"size":836,"mtime":1682107405630,"results":"42","hashOfConfig":"34"},{"size":418,"mtime":1682133882982,"results":"43","hashOfConfig":"34"},{"size":3486,"mtime":1683308509968,"results":"44","hashOfConfig":"34"},{"size":147,"mtime":1682104367082,"results":"45","hashOfConfig":"34"},{"size":246,"mtime":1682132250689,"results":"46","hashOfConfig":"34"},{"size":2921,"mtime":1683753601620,"results":"47","hashOfConfig":"34"},{"size":1203,"mtime":1683268608334,"results":"48","hashOfConfig":"34"},{"size":2935,"mtime":1683753479520,"results":"49","hashOfConfig":"34"},{"size":1028,"mtime":1683584139219,"results":"50","hashOfConfig":"34"},{"size":645,"mtime":1682122604157,"results":"51","hashOfConfig":"34"},{"size":2302,"mtime":1683577721128,"results":"52","hashOfConfig":"34"},{"size":956,"mtime":1683314718428,"results":"53","hashOfConfig":"34"},{"size":1091,"mtime":1682127087794,"results":"54","hashOfConfig":"34"},{"size":2700,"mtime":1683755267427,"results":"55","hashOfConfig":"34"},{"size":672,"mtime":1683136641296,"results":"56","hashOfConfig":"34"},{"size":1402,"mtime":1683753942201,"results":"57","hashOfConfig":"34"},{"size":2455,"mtime":1683753844553,"results":"58","hashOfConfig":"34"},{"size":1503,"mtime":1683754461647,"results":"59","hashOfConfig":"34"},{"size":4851,"mtime":1683753601601,"results":"60","hashOfConfig":"34"},{"size":1408,"mtime":1683753775473,"results":"61","hashOfConfig":"34"},{"size":2545,"mtime":1683754312395,"results":"62","hashOfConfig":"34"},{"size":4749,"mtime":1683754051117,"results":"63","hashOfConfig":"34"},{"size":1152,"mtime":1683177418986,"results":"64","hashOfConfig":"34"},{"size":1391,"mtime":1683754103034,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njwfvy",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\index.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\App.js",["178","179","180"],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\mobX\\userM.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\mobX\\shiftsM.js",[],[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\mobX\\firmaM.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\NavBar.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\AppRouter.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\http\\userAPI.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\routes.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\http\\index.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Settings.js",["181"],[],"import React, {useContext, useState} from 'react';\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport CreateCompanys from \"../modals/CreateCompanys\";\r\nimport CreatePositio from \"../modals/CreatePositio\";\r\nimport CreateComapanyTyp from \"../modals/CreateComapanyTyp\";\r\n\r\nimport {Context} from \"../index\";\r\nimport CreateWorkHourTemplates from \"../modals/CreateWorkHourTemplates\";\r\nimport WorkPermitModal from \"../modals/WorkPermitModal\";\r\nimport CreateWorkStatusModal from \"../modals/CreateWorkStatusModal\";\r\n\r\nconst Settings = () => {\r\n    const {user} = useContext(Context)\r\n\r\n    const [companysModal, setCompanysModal] = useState(false)\r\n    const [positionModal, setPositionModal] = useState(false)\r\n    const [companyTypeModal, setCompanyTypeModal] = useState(false)\r\n    const [timeModal, setTimeModal] = useState(false)\r\n    const [workPermit, setWorkPermit] = useState(false)\r\n    const [workStatus, setWorkStatus] = useState(false)\r\n\r\n    const userId = user.userId\r\n\r\n    return (\r\n        <Container className>\r\n            <Row>\r\n                <Col className=\"d-flex flex-column\">\r\n                </Col>\r\n                <Col className=\"d-flex flex-column\">\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"outline-dark\"} onClick={()=> setCompanyTypeModal(true)}>Add company type</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"outline-dark\"} onClick={()=> setCompanysModal(true)}>Add Company</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"outline-dark\"} onClick={()=> setPositionModal(true)}>Add Position</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"outline-dark\"} onClick={()=> setTimeModal(true)}>Time</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"outline-dark\"} onClick={()=> setWorkPermit(true)}>Worker Permit</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"outline-dark\"} onClick={()=> setWorkStatus(true)}>Worker Status</Button>\r\n\r\n                    <CreateCompanys show={companysModal} onHide={()=> setCompanysModal(false)}/>\r\n                    <CreatePositio show={positionModal} onHide={()=> setPositionModal(false)}/>\r\n                    <CreateComapanyTyp show={companyTypeModal} onHide={()=> setCompanyTypeModal(false)}/>\r\n                    <CreateWorkHourTemplates show={timeModal} onHide={()=> setTimeModal(false)}/>\r\n                    <WorkPermitModal show={workPermit} onHide={() => setWorkPermit(false)}/>\r\n                    <CreateWorkStatusModal show={workStatus} onHide={() => setWorkStatus(false)}/>\r\n                </Col>\r\n                <Col className=\"d-flex flex-column\">\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"dark\"}>company types list</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"dark\"}>list of companies</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"dark\"}>position list</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"dark\"}>Time list</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"dark\"}>Worker Permit list</Button>\r\n                    <Button className=\"mt-2 p-2 w-auto\" variant={\"dark\"} >Worker Status List</Button>\r\n                </Col>\r\n                <Col className=\"d-flex flex-column\">\r\n                </Col>\r\n        </Row>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Admin.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\utils\\consts.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Shifts.js",["182","183","184","185"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport CompanysBar from \"../components/CompanysBar\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchCompanys} from \"../http/ShiftsAPI\";\r\nimport data from \"bootstrap/js/src/dom/data\";\r\nimport ShiftList from \"../components/ShiftList\";\r\nimport Calendar from \"../components/Calendar\";\r\nimport CreateShifts from \"../modals/CreateShifts\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\n\r\nconst Shifts = observer(() => {\r\n    const {shifts} = useContext(Context)\r\n    const {user} = useContext(Context)\r\n\r\n    const [createShiftModal, setCteateShiftModal] = useState(false);\r\n    const [selectData, setSelectData] = useState(new Date());\r\n    useEffect(()=>{\r\n        fetchCompanys().then(data =>shifts.setCompanys(data))\r\n    },[])\r\n\r\n    useEffect(() => {\r\n    }, [selectData]);\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        setSelectData(date);\r\n    };\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n    const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n    const handleCompanySelected = (companyId) => {\r\n        setSelectedCompanyId(companyId);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col md={2}>\r\n                    <CompanysBar onCompanySelected={handleCompanySelected}/>\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    <ShiftList/>\r\n                </Col>\r\n\r\n                <Col md={2}>\r\n                    <Row className=\"mt-2\">\r\n\r\n                            <DatePicker\r\n                                selected={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                dateFormat=\"dd-MM-yyyy\"\r\n                                placeholderText=\"Select a date\"\r\n                            />\r\n\r\n                    </Row>\r\n                    <hr/>\r\n                    <Row>\r\n                    <Button className=\"mt-2\" variant=\"outline-primary\" onClick={()=> setCteateShiftModal(true)}>Add a shift</Button>\r\n                    <Button className=\"mt-2\" variant=\"outline-primary\">Add sfifts</Button>\r\n                    <CreateShifts\r\n                        show={createShiftModal}\r\n                        onHide={()=> setCteateShiftModal(false)}\r\n                        date={selectData}\r\n                        company={selectedCompanyId}\r\n                    />\r\n                        <hr/>\r\n                        <Button className=\"mt-2\" variant=\"outline-primary\">Shift export</Button>\r\n                        <Button className=\"mt-2\" variant=\"outline-primary\" >Shift import</Button>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n\r\n    );\r\n});\r\n\r\nexport default Shifts;\r\n","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Workers.js",["186"],[],"import React, {useState} from 'react';\r\nimport {Button, Col, Form, InputGroup, Row} from \"react-bootstrap\";\r\n\r\nimport WorkersList from \"../components/WorkersList\";\r\nimport CreateWorkers from \"../modals/CreateWorkers\";\r\n\r\nconst Workers = ({show, onHide}) => {\r\n    const [workersModal, setWorkersModal] = useState(false)\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={2}>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <Form className=\"mt-2\">\r\n                        <Form.Control\r\n                            placeholder={\"Hledani\"}\r\n                        />\r\n                    </Form>\r\n                    <WorkersList/>\r\n                </Col>\r\n                <Col md={1}>\r\n                    <Row>\r\n                    <Button className=\"mt-2\" variant=\"outline-primary\" >Search</Button>\r\n                    <Button className=\"mt-2\" variant=\"outline-primary\" onClick={()=> setWorkersModal(true)}>Add Worker</Button>\r\n                    </Row>\r\n                    <CreateWorkers show = {workersModal} onHide={()=>setWorkersModal(false)}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Workers;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\pages\\Auth.js",["187"],[],"import React, {useContext, useState} from 'react';\r\nimport {Button, Card, Container, Form} from \"react-bootstrap\";\r\nimport {Navigate, NavLink, useLocation, useNavigate,} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHIFTS_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\n\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const isLogin = location.pathname ===LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const click = async ()=> {\r\n    try {\r\n        let data;\r\n        if (isLogin){\r\n            data = await login(email, password)\r\n        }else {\r\n            data = await registration(email,password)\r\n        }\r\n\r\n        user.setUser(data)\r\n        user.setIsAuth(true)\r\n        localStorage.setItem('userId', user.userId);\r\n        navigate(SHIFTS_ROUTE)\r\n    }catch (e){\r\n        alert(e.response.data.message)\r\n    }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container\r\n         className=\"d-flex justify-content-center align-items-center\"\r\n         style={{height: window.innerHeight -30}}\r\n        >\r\n            <Card style={{width:600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? \"Authorization\" : \"Registration\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n\r\n                    <Form.Control\r\n                        className=\"mt-2\"\r\n                        placeholder=\"Enter your Email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-2\"\r\n                        placeholder=\"Enter your Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                </Form>\r\n\r\n                <Form className=\"d-flex justify-content-between mt-3\">\r\n\r\n                    {isLogin ?\r\n                        <div>\r\n                            <NavLink to={REGISTRATION_ROUTE}>Registration</NavLink>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <NavLink to={LOGIN_ROUTE}>Authorization</NavLink>\r\n                        </div>\r\n                    }\r\n                    <Button\r\n                        variant={\"outline-success\"}\r\n                        onClick={click}\r\n                        className=\"mt-2 align-self-end\">\r\n                        {isLogin ? \"Enter\" : \"Registration\"}\r\n                    </Button>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\CompanysBar.js",["188","189"],[],"import React, {useContext} from 'react';\r\nimport {makeObservable, observe} from \"mobx\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CompanysBar = observer(({onCompanySelected}) => {\r\nconst {shifts}=useContext(Context)\r\n    const handleCompanyClick = (company) => {\r\n        shifts.setSeelectedCopanys(company);\r\n        onCompanySelected(company.id);\r\n    };\r\n\r\n    return (\r\n\r\n            <ListGroup className=\"mt-2\">\r\n                {shifts.companys.map(companys =>\r\n                    <ListGroup.Item\r\n                        style={{cursor: 'pointer'}}\r\n                        active={companys.id === shifts.seelectedCopanys.id}\r\n                       onClick={()=> handleCompanyClick(companys)}\r\n                        key={companys.id}\r\n                    >\r\n                        {companys.name}\r\n                    </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n\r\n    );\r\n});\r\n\r\nexport default CompanysBar;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\ShiftsFiltr.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\http\\ShiftsAPI.js",["190"],[],"import {$authHost, $host} from \"./index\";\r\nexport const createCompanys= async (companys) =>\r\n{\r\n    const {data} = await $host.post('api/companys', companys)\r\n    return data;\r\n}\r\n\r\nexport const fetchCompanys = async () =>\r\n{\r\n    const {data} = await $host.get('api/companys')\r\n    return data\r\n}\r\n\r\nexport const createCompanyType= async (companyType) =>\r\n{\r\n    const {data} = await $host.post('api/companyType', companyType)\r\n    return data\r\n}\r\n\r\nexport const fetchCompanyType = async () =>\r\n{\r\n    const {data} = await $host.get('api/companyType')\r\n    return data\r\n}\r\n\r\nexport const createWorkHourTemplates= async (workHourTemplates) =>\r\n{\r\n    const {data} = await $host.post('api/workHoursTemplates',workHourTemplates)\r\n    return data\r\n}\r\nexport const fetchWorkHourTemplates = async () =>\r\n{\r\n    const {data} = await $host.get('api/workHoursTemplates')\r\n    return data\r\n}\r\n\r\n\r\nexport const createPositions= async (positions) =>\r\n{\r\n    const {data} = await $host.post('api/positions', positions)\r\n    return data\r\n}\r\n\r\nexport const createWorkStatus=async (workStatus) =>\r\n{\r\nconst {data} = await $host.post('api/workStatus', workStatus)\r\nreturn data\r\n}\r\nexport const createWorkPermit=async (workPermit) =>\r\n{\r\n    const {data} = await $host.post('api/workPermit', workPermit)\r\n    return data\r\n}\r\n\r\nexport const fetchWorkPermit=async () =>\r\n{\r\n    const {data} = await $host.get('api/workPermit')\r\n    return data\r\n}\r\n\r\nexport const fetchWorkStatus=async () =>\r\n{\r\n    const {data} = await $host.get('api/workStatus')\r\n    return data\r\n}\r\n\r\n\r\n\r\nexport const fetchPositions = async () =>\r\n{\r\n    const {data} = await $host.get('api/positions')\r\n    return data\r\n}\r\n\r\nexport const createWorker= async (worker) =>\r\n{\r\n    const {data} = await $host.post('api/workers', worker)\r\n    return data\r\n}\r\n\r\nexport const fetchWorker = async () =>\r\n{\r\n    const {data} = await $host.get('api/workers')\r\n    return data\r\n}\r\n\r\nexport const createShift = async (shift)=>\r\n{\r\n    const {data} = await $host.post('api/shifts', shift)\r\n    return data\r\n}\r\n\r\nexport const fetchShift = async () =>\r\n{\r\n    const {data} = await $host.get('api/shifts')\r\n    return data\r\n}\r\n\r\nexport const deleteWorker = async (id) => {\r\n    const response = await $host.delete('api/workers/' + id);\r\n    return response.data;\r\n};","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\ShiftList.js",["191"],[],"import React, {useContext, useEffect} from 'react';\r\nimport WorkerCard from './WorkerCard';\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {fetchShift, fetchWorker} from \"../http/ShiftsAPI\";\r\nconst ShiftList = observer(() => {\r\n    const {shifts}=useContext(Context)\r\n    useEffect(()=>{\r\n        fetchWorker().then(data =>shifts.setWorker(data))\r\n        fetchShift().then(data=>shifts.setShift(data))\r\n    },[])\r\n\r\n\r\n\r\n    const Delete = (workerId) => {\r\n        // логика удаления работника\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {shifts.worker.map(worker => (\r\n                <WorkerCard\r\n                    key={worker.id}\r\n                    firstName={worker.firstname}\r\n                    surname ={worker.surname}\r\n                    onDelete={() => Delete(worker.id)}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ShiftList;\r\n","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\WorkersListInShifts.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\WorkersList.js",["192","193","194"],[],"import {observer} from \"mobx-react-lite\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {Context} from \"../index\";\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport {fetchCompanyType, fetchWorker, deleteWorker, fetchWorkPermit, fetchWorkStatus} from \"../http/ShiftsAPI\";\r\n\r\nconst WorkersList = observer(() => {\r\n    const {shifts}=useContext(Context)\r\n\r\n    useEffect(()=>{\r\n        fetchWorker().then(data =>shifts.setWorker(data))\r\n        fetchWorkPermit().then(data =>shifts.setWorkerPermir(data))\r\n        fetchWorkStatus().then(data =>shifts.setWorkerStatus(data))\r\n    },[])\r\n\r\n    const Delete = async (id) => {\r\n        try {\r\n            await deleteWorker(id);\r\n            const updatedWorkers = shifts.worker.filter(worker => worker.id !== id);\r\n            shifts.setWorker(updatedWorkers);\r\n        } catch (error) {\r\n            console.error('Error deleting worker:', error);\r\n        }\r\n    };\r\n\r\n    const userId = parseInt(localStorage.getItem('userId'));\r\n    const filteredWorkers = shifts.worker.filter(worker => worker.userid === userId);\r\n\r\n\r\n    return (\r\n        <Table className=\"mt-2\" striped bordered hover >\r\n            <thead>\r\n            <tr>\r\n                <th>firstname</th>\r\n                <th>surname</th>\r\n                <th>age</th>\r\n                <th>citizenship</th>\r\n                <th>number</th>\r\n                <th>work_permit</th>\r\n                <th>work_status</th>\r\n\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {filteredWorkers.map((worker) => {\r\n                const workPermit = shifts.workerPermit.find((permit) => permit.id === worker.workPermitId);\r\n                const workStatus = shifts.workerStatus.find((status) => status.id === worker.workStatusId);\r\n\r\n                return (\r\n                    <tr key={worker.id}>\r\n                        <td>{worker.firstname}</td>\r\n                        <td>{worker.surname}</td>\r\n                        <td>{worker.age}</td>\r\n                        <td>{worker.citizenship}</td>\r\n                        <td>{worker.number}</td>\r\n                        <td>{workPermit ? workPermit.name : \"N/A\"}</td>\r\n                        <td>{workStatus ? workStatus.name : \"N/A\"}</td>\r\n                        <td className=\"text-center\">\r\n                            <Button variant=\"outline-danger\" onClick={() => Delete(worker.id)}>\r\n                                Delete\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n});\r\n\r\nexport default WorkersList;\r\n\r\nlocalStorage.getItem('userId')","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\Calendar.js",["195"],[],"import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst Calendar = ({onDateChange}) => {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        onDateChange(date);\r\n    };\r\n    return (\r\n        <div>\r\n            <DatePicker\r\n                selected={selectedDate}\r\n                onChange={date => setSelectedDate(date)}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                placeholderText=\"Select a date\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreatePositio.js",["196"],[],"import React, {useState} from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {createCompanys, createPositions} from \"../http/ShiftsAPI\";\r\n\r\nconst CreatePositio = ({show, onHide}) => {\r\n    const [name,setName] = useState('')\r\n    const addPositions = () =>{\r\n        createPositions(({name:name, userid: localStorage.getItem('userId')})).then(data =>{\r\n            setName('')\r\n            onHide()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add new position\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        placeholder={\"Enter position name\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n                <Button variant=\"outline-success\" onClick={addPositions}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreatePositio;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateCompanys.js",["197","198","199","200","201"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Dropdown, Form, Modal} from \"react-bootstrap\";\r\nimport {createCompanys, fetchCompanys, fetchCompanyType} from \"../http/ShiftsAPI\";\r\nimport {Context} from \"../index\";\r\n\r\nconst CreateCompanys = ({show, onHide}) => {\r\n    const {shifts}=useContext(Context)\r\n    const [name, setName]= useState('')\r\n    const [type, setType]= useState('')\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const addCompanys = () =>{\r\n        const formData = new FormData()\r\n            formData.append('name',name)\r\n            formData.append('companyTypeId',selectedType)\r\n            formData.append('userid', localStorage.getItem('userId'))\r\n\r\n        createCompanys(formData).then(data =>{\r\n            setSelectedType('')\r\n            setName('')\r\n            onHide()\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        fetchCompanyType().then(data =>shifts.setCompanyType(data))\r\n    },[])\r\n\r\n    const Change = (event) => {\r\n        setSelectedType(event.target.value);\r\n        console.log(selectedType)\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add new Companys\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        placeholder={\"Enter companys name\"}\r\n                    />\r\n\r\n                </Form>\r\n                <Form.Select className=\"mt-2\" aria-label=\"Default select example\" value={selectedType} onChange={Change}>\r\n                    <option>Select type</option>\r\n                    {shifts.companyType.map(companyType =>\r\n                        <option key={companyType.id} value={companyType.id}>{companyType.name}</option>\r\n                    )}\r\n                </Form.Select>\r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n                <Button variant=\"outline-success\" onClick={addCompanys}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateCompanys;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\WorkPermitModal.js",["202","203","204"],[],"import React, { useState } from 'react';\r\nimport { Button, Form, Modal, Tab, Tabs } from 'react-bootstrap';\r\nimport {createWorkPermit, createWorkStatus} from \"../http/ShiftsAPI\";\r\n\r\n\r\nconst CreateModal = ({ show, onHide }) => {\r\n    const [workPermitName, setWorkPermitName] = useState('');\r\n\r\n    const addWorkPermit = () => {\r\n        const formData = new FormData();\r\n        formData.append('name', workPermitName);\r\n        formData.append('userid',localStorage.getItem('userId'));\r\n        createWorkPermit(formData).then(() => {\r\n            setWorkPermitName('');\r\n            onHide();\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={onHide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add Work Permit</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={workPermitName}\r\n                        onChange={(e) => setWorkPermitName(e.target.value)}\r\n                        placeholder=\"Enter permit name\"\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onHide}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={addWorkPermit}>\r\n                    Add\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateModal;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateShifts.js",["205","206","207","208","209"],[],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport {\r\n    createShift,\r\n    fetchCompanys,\r\n    fetchCompanyType,\r\n    fetchPositions,\r\n    fetchWorker,\r\n    fetchWorkHourTemplates\r\n} from \"../http/ShiftsAPI\";\r\nimport {Context} from \"../index\";\r\nimport Select from 'react-select';\r\nimport {format} from 'date-fns';\r\nimport data from \"bootstrap/js/src/dom/data\";\r\n\r\n\r\nconst CreateShifts = ({show, onHide, date, userid}) => {\r\n    const {shifts}=useContext(Context)\r\n    const {user}=useContext(Context)\r\n    const  isoString = date.toISOString();\r\n    useEffect(()=>{\r\n        fetchPositions().then(data =>shifts.setPositions(data));\r\n        fetchWorker().then(data =>shifts.setWorker(data))\r\n        fetchWorkHourTemplates().then(data =>shifts.setWorkHourTemplates(data))\r\n        fetchCompanys().then(data => shifts.setCompanys(data))\r\n    },[])\r\n\r\n    const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n    const [selectedPosition, setSelectedPosition] = useState(\"\");\r\n    const [selectedShift, setSelectedShift] = useState(\"\");\r\n    const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n    const addShift = () =>{\r\n        const formData = new FormData()\r\n        /*TODO*/\r\n        formData.append(\"workerId\", selectedEmployee.value);\r\n        formData.append(\"positionId\", selectedPosition);\r\n        formData.append(\"workHourTemplateId\", selectedShift);\r\n        formData.append(\"startDate\", isoString);\r\n        formData.append(\"companyId\", selectedCompany)\r\n        formData.append(\"userid\", localStorage.getItem('userId'))\r\n\r\n        createShift(formData).then(data => {\r\n            setSelectedEmployee(\"\");\r\n            setSelectedPosition(\"\");\r\n            setSelectedShift(\"\");\r\n            setSelectedCompany(\"\");\r\n            onHide();\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n/*        console.log(`Employee: ${selectedEmployee}, Position: ${selectedPosition}, Shift: ${selectedShift}`);*/\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={onHide} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add Shift</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <Select\r\n                        value={selectedEmployee}\r\n                        onChange={(selectedOption) => setSelectedEmployee(selectedOption)}\r\n                        options={shifts.worker.map(item =>({value:item.id, label:`${item.firstname} ${item.surname}`}))} />\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Position:</Form.Label>\r\n                        <Form.Select\r\n                            value={selectedPosition}\r\n                            onChange={(e) => setSelectedPosition(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select Position</option>\r\n                            {shifts.positions.map(position=>\r\n                            <option key={position.id} value={position.id}> {position.name}</option> )}\r\n\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Company:</Form.Label>\r\n                        <Form.Select\r\n                            value={selectedCompany}\r\n                            onChange={(e) => setSelectedCompany(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select Company</option>\r\n                            {shifts.companys.map(companys=>\r\n                                <option key={companys.id} value={companys.id}> {companys.name}</option> )}\r\n\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"shift\">\r\n                        <Form.Label>Shift:</Form.Label>\r\n                        <Form.Select\r\n                            value={selectedShift}\r\n                            onChange={(e) => setSelectedShift(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select Shift</option>\r\n                            {shifts._workHourTemplates.map(workHourTemplate=>\r\n                                <option key={workHourTemplate.id} value={workHourTemplate.id}> {workHourTemplate.name}</option> )}\r\n                        </Form.Select>\r\n\r\n                    </Form.Group>\r\n\r\n                    <div className=\"d-flex justify-content-end mt-2\">\r\n                    <Button variant=\"primary\" onClick={addShift}>\r\n                        Add\r\n                    </Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateShifts;\r\n","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateComapanyTyp.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateWorkHourTemplates.js",[],[],"C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateWorkers.js",["210","211","212"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {createCompanys, createWorker, fetchCompanyType, fetchWorkPermit, fetchWorkStatus} from \"../http/ShiftsAPI\";\r\nimport {Context} from \"../index\";\r\n\r\nconst CreateWorkers = ({show, onHide}) => {\r\n    const {shifts}=useContext(Context)\r\n    useEffect(()=>{\r\n        fetchWorkPermit().then(data =>shifts.setWorkerPermir(data))\r\n        fetchWorkStatus().then(data =>shifts.setWorkerStatus(data))\r\n    },[])\r\n\r\n    const [firstname, setFirstname] = useState('')\r\n    const [surname,setSurname] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [citizenship , setCitizenship] = useState('')\r\n    const [workStatus, setWorkStatus ] = useState('')\r\n    const [workPermit,setWorkPermit] = useState('')\r\n    const addWorker = () =>{\r\n        const formData = new FormData()\r\n            formData.append('firstname', firstname)\r\n            formData.append('surname', surname,)\r\n            formData.append('workPermitId', workPermit,)\r\n            formData.append('number', number,)\r\n            formData.append('age', age,)\r\n            formData.append('citizenship', citizenship,)\r\n            formData.append('workStatusId', workStatus)\r\n            formData.append('userid', localStorage.getItem('userId'))\r\n        createWorker(formData).then(data =>{\r\n                setFirstname('')\r\n                setSurname ('')\r\n                setWorkPermit ('')\r\n                setNumber ('')\r\n                setAge ('')\r\n                setCitizenship ('')\r\n                setWorkStatus ('')\r\n                onHide()\r\n        })\r\n    }\r\n\r\n    const ChangeWorkStatus = (event) => {\r\n        setWorkStatus(event.target.value);\r\n    };\r\n    const ChangeWorkPermit = (event) => {\r\n        setWorkPermit(event.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size='sm'\r\n            centered>\r\n\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add new worker\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={firstname}\r\n                        onChange={e=> setFirstname(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder={\"Enter worker's firstname\"}/>\r\n                    <Form.Control\r\n                        value={surname}\r\n                        onChange={e=>setSurname (e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder={\"Enter worker's surname\"}/>\r\n                    <Form.Control\r\n                        value={number}\r\n                        onChange={e=> setNumber(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder={\"Enter worker's number\"}/>\r\n                    <Form.Control\r\n                        value={age}\r\n                        onChange={e=> setAge(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder={\"Enter worker's age\"}/>\r\n                    <Form.Control\r\n                        value={citizenship}\r\n                        onChange={e=> setCitizenship(e.target.value)}\r\n                        className=\"mt-2\"\r\n                        placeholder={\"Enter worker's citizenship\"}/>\r\n\r\n                    <Form.Select className=\"mt-2\" aria-label=\"Default select example\" value={workPermit} onChange={ChangeWorkPermit}>\r\n                        <option>Select Permit</option>\r\n                        {shifts.workerPermit.map(workerPermit =>\r\n                            <option key={workerPermit.id} value={workerPermit.id}>{workerPermit.name}</option>\r\n                        )}\r\n                    </Form.Select>\r\n                    <Form.Select className=\"mt-2\" aria-label=\"Default select example\" value={workStatus} onChange={ChangeWorkStatus}>\r\n                        <option>Select Status</option>\r\n                        {shifts.workerStatus.map(workerStatus =>\r\n                            <option key={workerStatus.id} value={workerStatus.id}>{workerStatus.name}</option>\r\n                        )}\r\n                    </Form.Select>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n                <Button variant=\"outline-success\" onClick={addWorker}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateWorkers;","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\components\\WorkerCard.js",["213"],[],"import React from 'react';\r\nimport {Card, Button, Row, Form, Col} from 'react-bootstrap';\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst WorkerCard = ({firstName,surname,onDelete}) => {\r\n    return (\r\n        <Card className=\"mt-2\">\r\n\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <Row>\r\n                            <Card.Title>{firstName} {surname}</Card.Title>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Form>\r\n                            6:30\r\n                            <br/>\r\n                            18:00\r\n                        </Form>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        Position\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <Form>\r\n                            <Button variant=\"outline-danger\" onClick={onDelete}>Delete</Button>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default WorkerCard;\r\n","C:\\Users\\melya\\WebstormProjects\\joblifeweb\\client\\src\\modals\\CreateWorkStatusModal.js",[],[],{"ruleId":"214","severity":1,"message":"215","line":1,"column":24,"nodeType":"216","messageId":"217","endLine":1,"endColumn":35},{"ruleId":"214","severity":1,"message":"218","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":12},{"ruleId":"219","severity":1,"message":"220","line":23,"column":8,"nodeType":"221","endLine":23,"endColumn":10,"suggestions":"222"},{"ruleId":"214","severity":1,"message":"223","line":22,"column":11,"nodeType":"216","messageId":"217","endLine":22,"endColumn":17},{"ruleId":"214","severity":1,"message":"218","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":12},{"ruleId":"214","severity":1,"message":"224","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":16},{"ruleId":"214","severity":1,"message":"225","line":17,"column":12,"nodeType":"216","messageId":"217","endLine":17,"endColumn":16},{"ruleId":"219","severity":1,"message":"226","line":23,"column":7,"nodeType":"221","endLine":23,"endColumn":9,"suggestions":"227"},{"ruleId":"214","severity":1,"message":"228","line":2,"column":28,"nodeType":"216","messageId":"217","endLine":2,"endColumn":38},{"ruleId":"214","severity":1,"message":"229","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":2,"column":9,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"231","line":2,"column":25,"nodeType":"216","messageId":"217","endLine":2,"endColumn":32},{"ruleId":"214","severity":1,"message":"232","line":1,"column":9,"nodeType":"216","messageId":"217","endLine":1,"endColumn":18},{"ruleId":"219","severity":1,"message":"226","line":11,"column":7,"nodeType":"221","endLine":11,"endColumn":9,"suggestions":"233"},{"ruleId":"214","severity":1,"message":"234","line":2,"column":39,"nodeType":"216","messageId":"217","endLine":2,"endColumn":47},{"ruleId":"214","severity":1,"message":"235","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":25},{"ruleId":"219","severity":1,"message":"226","line":14,"column":7,"nodeType":"221","endLine":14,"endColumn":9,"suggestions":"236"},{"ruleId":"214","severity":1,"message":"237","line":7,"column":11,"nodeType":"216","messageId":"217","endLine":7,"endColumn":27},{"ruleId":"214","severity":1,"message":"238","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"214","severity":1,"message":"239","line":2,"column":17,"nodeType":"216","messageId":"217","endLine":2,"endColumn":25},{"ruleId":"214","severity":1,"message":"240","line":3,"column":25,"nodeType":"216","messageId":"217","endLine":3,"endColumn":38},{"ruleId":"214","severity":1,"message":"241","line":9,"column":12,"nodeType":"216","messageId":"217","endLine":9,"endColumn":16},{"ruleId":"214","severity":1,"message":"242","line":9,"column":18,"nodeType":"216","messageId":"217","endLine":9,"endColumn":25},{"ruleId":"219","severity":1,"message":"226","line":25,"column":7,"nodeType":"221","endLine":25,"endColumn":9,"suggestions":"243"},{"ruleId":"214","severity":1,"message":"244","line":2,"column":31,"nodeType":"216","messageId":"217","endLine":2,"endColumn":34},{"ruleId":"214","severity":1,"message":"245","line":2,"column":36,"nodeType":"216","messageId":"217","endLine":2,"endColumn":40},{"ruleId":"214","severity":1,"message":"246","line":3,"column":27,"nodeType":"216","messageId":"217","endLine":3,"endColumn":43},{"ruleId":"214","severity":1,"message":"235","line":6,"column":5,"nodeType":"216","messageId":"217","endLine":6,"endColumn":21},{"ruleId":"214","severity":1,"message":"247","line":13,"column":9,"nodeType":"216","messageId":"217","endLine":13,"endColumn":15},{"ruleId":"214","severity":1,"message":"218","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":12},{"ruleId":"214","severity":1,"message":"225","line":19,"column":12,"nodeType":"216","messageId":"217","endLine":19,"endColumn":16},{"ruleId":"219","severity":1,"message":"226","line":26,"column":7,"nodeType":"221","endLine":26,"endColumn":9,"suggestions":"248"},{"ruleId":"214","severity":1,"message":"238","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"214","severity":1,"message":"235","line":3,"column":39,"nodeType":"216","messageId":"217","endLine":3,"endColumn":55},{"ruleId":"219","severity":1,"message":"226","line":11,"column":7,"nodeType":"221","endLine":11,"endColumn":9,"suggestions":"249"},{"ruleId":"214","severity":1,"message":"250","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["251"],"'userId' is assigned a value but never used.","'Calendar' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'shifts'. Either include it or remove the dependency array.",["252"],"'InputGroup' is defined but never used.","'Navigate' is defined but never used.","'makeObservable' is defined but never used.","'observe' is defined but never used.","'$authHost' is defined but never used.",["253"],"'useState' is defined but never used.","'fetchCompanyType' is defined but never used.",["254"],"'handleDateChange' is assigned a value but never used.","'createCompanys' is defined but never used.","'Dropdown' is defined but never used.","'fetchCompanys' is defined but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.",["255"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","'createWorkStatus' is defined but never used.","'format' is defined but never used.",["256"],["257"],"'observer' is defined but never used.",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"260","fix":"262"},{"desc":"260","fix":"263"},{"desc":"260","fix":"264"},{"desc":"260","fix":"265"},{"desc":"260","fix":"266"},"Update the dependencies array to be: [user]",{"range":"267","text":"268"},"Update the dependencies array to be: [shifts]",{"range":"269","text":"270"},{"range":"271","text":"270"},{"range":"272","text":"270"},{"range":"273","text":"270"},{"range":"274","text":"270"},{"range":"275","text":"270"},[692,694],"[user]",[894,896],"[shifts]",[449,451],[609,611],[965,967],[919,921],[521,523]]